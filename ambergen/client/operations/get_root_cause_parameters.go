// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRootCauseParams creates a new GetRootCauseParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRootCauseParams() *GetRootCauseParams {
	return &GetRootCauseParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRootCauseParamsWithTimeout creates a new GetRootCauseParams object
// with the ability to set a timeout on a request.
func NewGetRootCauseParamsWithTimeout(timeout time.Duration) *GetRootCauseParams {
	return &GetRootCauseParams{
		timeout: timeout,
	}
}

// NewGetRootCauseParamsWithContext creates a new GetRootCauseParams object
// with the ability to set a context for a request.
func NewGetRootCauseParamsWithContext(ctx context.Context) *GetRootCauseParams {
	return &GetRootCauseParams{
		Context: ctx,
	}
}

// NewGetRootCauseParamsWithHTTPClient creates a new GetRootCauseParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRootCauseParamsWithHTTPClient(client *http.Client) *GetRootCauseParams {
	return &GetRootCauseParams{
		HTTPClient: client,
	}
}

/* GetRootCauseParams contains all the parameters to send to the API endpoint
   for the get root cause operation.

   Typically these are written to a http.Request.
*/
type GetRootCauseParams struct {

	/* ClusterID.

	   An array of cluster IDs
	*/
	ClusterID *string

	/* Pattern.

	   Patterns to compare to the nano model for the root cause analysis
	*/
	Pattern *string

	/* SensorID.

	   Unique identifier for sensor
	*/
	SensorID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get root cause params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRootCauseParams) WithDefaults() *GetRootCauseParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get root cause params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRootCauseParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get root cause params
func (o *GetRootCauseParams) WithTimeout(timeout time.Duration) *GetRootCauseParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get root cause params
func (o *GetRootCauseParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get root cause params
func (o *GetRootCauseParams) WithContext(ctx context.Context) *GetRootCauseParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get root cause params
func (o *GetRootCauseParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get root cause params
func (o *GetRootCauseParams) WithHTTPClient(client *http.Client) *GetRootCauseParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get root cause params
func (o *GetRootCauseParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the get root cause params
func (o *GetRootCauseParams) WithClusterID(clusterID *string) *GetRootCauseParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the get root cause params
func (o *GetRootCauseParams) SetClusterID(clusterID *string) {
	o.ClusterID = clusterID
}

// WithPattern adds the pattern to the get root cause params
func (o *GetRootCauseParams) WithPattern(pattern *string) *GetRootCauseParams {
	o.SetPattern(pattern)
	return o
}

// SetPattern adds the pattern to the get root cause params
func (o *GetRootCauseParams) SetPattern(pattern *string) {
	o.Pattern = pattern
}

// WithSensorID adds the sensorID to the get root cause params
func (o *GetRootCauseParams) WithSensorID(sensorID string) *GetRootCauseParams {
	o.SetSensorID(sensorID)
	return o
}

// SetSensorID adds the sensorId to the get root cause params
func (o *GetRootCauseParams) SetSensorID(sensorID string) {
	o.SensorID = sensorID
}

// WriteToRequest writes these params to a swagger request
func (o *GetRootCauseParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ClusterID != nil {

		// query param clusterID
		var qrClusterID string

		if o.ClusterID != nil {
			qrClusterID = *o.ClusterID
		}
		qClusterID := qrClusterID
		if qClusterID != "" {

			if err := r.SetQueryParam("clusterID", qClusterID); err != nil {
				return err
			}
		}
	}

	if o.Pattern != nil {

		// query param pattern
		var qrPattern string

		if o.Pattern != nil {
			qrPattern = *o.Pattern
		}
		qPattern := qrPattern
		if qPattern != "" {

			if err := r.SetQueryParam("pattern", qPattern); err != nil {
				return err
			}
		}
	}

	// header param sensorId
	if err := r.SetHeaderParam("sensorId", o.SensorID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
