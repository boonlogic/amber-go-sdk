// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/boonlogic/amber-go-sdk/v1/models"
)

// GetSensorsReader is a Reader for the GetSensors structure.
type GetSensorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSensorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSensorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSensorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSensorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSensorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSensorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSensorsOK creates a GetSensorsOK with default headers values
func NewGetSensorsOK() *GetSensorsOK {
	return &GetSensorsOK{}
}

/*
	GetSensorsOK describes a response with status code 200, with default header values.

Operation was successful
*/
type GetSensorsOK struct {
	Payload models.GetSensorsResponse
}

func (o *GetSensorsOK) Error() string {
	return fmt.Sprintf("[GET /sensors][%d] getSensorsOK  %+v", 200, o.Payload)
}
func (o *GetSensorsOK) GetPayload() models.GetSensorsResponse {
	return o.Payload
}

func (o *GetSensorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSensorsBadRequest creates a GetSensorsBadRequest with default headers values
func NewGetSensorsBadRequest() *GetSensorsBadRequest {
	return &GetSensorsBadRequest{}
}

/*
	GetSensorsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSensorsBadRequest struct {
	Payload *models.Error
}

func (o *GetSensorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /sensors][%d] getSensorsBadRequest  %+v", 400, o.Payload)
}
func (o *GetSensorsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSensorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSensorsUnauthorized creates a GetSensorsUnauthorized with default headers values
func NewGetSensorsUnauthorized() *GetSensorsUnauthorized {
	return &GetSensorsUnauthorized{}
}

/*
	GetSensorsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSensorsUnauthorized struct {
	Payload *models.Error
}

func (o *GetSensorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sensors][%d] getSensorsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetSensorsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSensorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSensorsNotFound creates a GetSensorsNotFound with default headers values
func NewGetSensorsNotFound() *GetSensorsNotFound {
	return &GetSensorsNotFound{}
}

/*
	GetSensorsNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type GetSensorsNotFound struct {
	Payload *models.Error
}

func (o *GetSensorsNotFound) Error() string {
	return fmt.Sprintf("[GET /sensors][%d] getSensorsNotFound  %+v", 404, o.Payload)
}
func (o *GetSensorsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSensorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSensorsInternalServerError creates a GetSensorsInternalServerError with default headers values
func NewGetSensorsInternalServerError() *GetSensorsInternalServerError {
	return &GetSensorsInternalServerError{}
}

/*
	GetSensorsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetSensorsInternalServerError struct {
	Payload *models.Error
}

func (o *GetSensorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /sensors][%d] getSensorsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSensorsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSensorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
