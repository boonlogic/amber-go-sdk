// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FeatureRootCause feature root cause
//
// swagger:model featureRootCause
type FeatureRootCause struct {

	// Name of this feature.
	Name string `json:"name"`

	// Root cause of this feature relative to others, as a number between 0.0 and 1.0. 0.0 indicates no contribution to the anomaly index, while a value close to 1.0 means the present anomaly implicates this feature strongly.
	// Maximum: 1
	// Minimum: 0
	Value *float32 `json:"value"`
}

// Validate validates this feature root cause
func (m *FeatureRootCause) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FeatureRootCause) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(m.Value) { // not required
		return nil
	}

	if err := validate.Minimum("value", "body", float64(*m.Value), 0, false); err != nil {
		return err
	}

	if err := validate.Maximum("value", "body", float64(*m.Value), 1, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this feature root cause based on context it is used
func (m *FeatureRootCause) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FeatureRootCause) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FeatureRootCause) UnmarshalBinary(b []byte) error {
	var res FeatureRootCause
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
