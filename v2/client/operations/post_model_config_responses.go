// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/boonlogic/amber-go-sdk/v2/models"
)

// PostModelConfigReader is a Reader for the PostModelConfig structure.
type PostModelConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostModelConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostModelConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostModelConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostModelConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostModelConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostModelConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostModelConfigOK creates a PostModelConfigOK with default headers values
func NewPostModelConfigOK() *PostModelConfigOK {
	return &PostModelConfigOK{}
}

/*
	PostModelConfigOK describes a response with status code 200, with default header values.

OK
*/
type PostModelConfigOK struct {
	Payload *models.PostConfigResponse
}

func (o *PostModelConfigOK) Error() string {
	return fmt.Sprintf("[POST /models/{modelId}/config][%d] postModelConfigOK  %+v", 200, o.Payload)
}
func (o *PostModelConfigOK) GetPayload() *models.PostConfigResponse {
	return o.Payload
}

func (o *PostModelConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostModelConfigBadRequest creates a PostModelConfigBadRequest with default headers values
func NewPostModelConfigBadRequest() *PostModelConfigBadRequest {
	return &PostModelConfigBadRequest{}
}

/*
	PostModelConfigBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostModelConfigBadRequest struct {
	Payload *models.Error
}

func (o *PostModelConfigBadRequest) Error() string {
	return fmt.Sprintf("[POST /models/{modelId}/config][%d] postModelConfigBadRequest  %+v", 400, o.Payload)
}
func (o *PostModelConfigBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostModelConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostModelConfigUnauthorized creates a PostModelConfigUnauthorized with default headers values
func NewPostModelConfigUnauthorized() *PostModelConfigUnauthorized {
	return &PostModelConfigUnauthorized{}
}

/*
	PostModelConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostModelConfigUnauthorized struct {
	Payload *models.Error
}

func (o *PostModelConfigUnauthorized) Error() string {
	return fmt.Sprintf("[POST /models/{modelId}/config][%d] postModelConfigUnauthorized  %+v", 401, o.Payload)
}
func (o *PostModelConfigUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostModelConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostModelConfigNotFound creates a PostModelConfigNotFound with default headers values
func NewPostModelConfigNotFound() *PostModelConfigNotFound {
	return &PostModelConfigNotFound{}
}

/*
	PostModelConfigNotFound describes a response with status code 404, with default header values.

Resource not found
*/
type PostModelConfigNotFound struct {
	Payload *models.Error
}

func (o *PostModelConfigNotFound) Error() string {
	return fmt.Sprintf("[POST /models/{modelId}/config][%d] postModelConfigNotFound  %+v", 404, o.Payload)
}
func (o *PostModelConfigNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostModelConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostModelConfigInternalServerError creates a PostModelConfigInternalServerError with default headers values
func NewPostModelConfigInternalServerError() *PostModelConfigInternalServerError {
	return &PostModelConfigInternalServerError{}
}

/*
	PostModelConfigInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostModelConfigInternalServerError struct {
	Payload *models.Error
}

func (o *PostModelConfigInternalServerError) Error() string {
	return fmt.Sprintf("[POST /models/{modelId}/config][%d] postModelConfigInternalServerError  %+v", 500, o.Payload)
}
func (o *PostModelConfigInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostModelConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
