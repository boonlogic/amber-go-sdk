// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/boonlogic/amber-go-sdk/models"
)

// PostOauth2Reader is a Reader for the PostOauth2 structure.
type PostOauth2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOauth2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOauth2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostOauth2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOauth2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOauth2OK creates a PostOauth2OK with default headers values
func NewPostOauth2OK() *PostOauth2OK {
	return &PostOauth2OK{}
}

/*
	PostOauth2OK describes a response with status code 200, with default header values.

Operation was successful
*/
type PostOauth2OK struct {
	Payload *models.PostAuth2Response
}

func (o *PostOauth2OK) Error() string {
	return fmt.Sprintf("[POST /oauth2][%d] postOauth2OK  %+v", 200, o.Payload)
}
func (o *PostOauth2OK) GetPayload() *models.PostAuth2Response {
	return o.Payload
}

func (o *PostOauth2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostAuth2Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauth2Unauthorized creates a PostOauth2Unauthorized with default headers values
func NewPostOauth2Unauthorized() *PostOauth2Unauthorized {
	return &PostOauth2Unauthorized{}
}

/*
	PostOauth2Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostOauth2Unauthorized struct {
	Payload *models.Error
}

func (o *PostOauth2Unauthorized) Error() string {
	return fmt.Sprintf("[POST /oauth2][%d] postOauth2Unauthorized  %+v", 401, o.Payload)
}
func (o *PostOauth2Unauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostOauth2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauth2InternalServerError creates a PostOauth2InternalServerError with default headers values
func NewPostOauth2InternalServerError() *PostOauth2InternalServerError {
	return &PostOauth2InternalServerError{}
}

/*
	PostOauth2InternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostOauth2InternalServerError struct {
	Payload *models.Error
}

func (o *PostOauth2InternalServerError) Error() string {
	return fmt.Sprintf("[POST /oauth2][%d] postOauth2InternalServerError  %+v", 500, o.Payload)
}
func (o *PostOauth2InternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostOauth2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
