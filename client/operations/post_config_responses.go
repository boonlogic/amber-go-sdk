// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/boonlogic/amber-go-sdk/models"
)

// PostConfigReader is a Reader for the PostConfig structure.
type PostConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostConfigServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostConfigOK creates a PostConfigOK with default headers values
func NewPostConfigOK() *PostConfigOK {
	return &PostConfigOK{}
}

/*
	PostConfigOK describes a response with status code 200, with default header values.

Operation was successful
*/
type PostConfigOK struct {
	Payload *models.PostConfigResponse
}

func (o *PostConfigOK) Error() string {
	return fmt.Sprintf("[POST /config][%d] postConfigOK  %+v", 200, o.Payload)
}
func (o *PostConfigOK) GetPayload() *models.PostConfigResponse {
	return o.Payload
}

func (o *PostConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConfigBadRequest creates a PostConfigBadRequest with default headers values
func NewPostConfigBadRequest() *PostConfigBadRequest {
	return &PostConfigBadRequest{}
}

/*
	PostConfigBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostConfigBadRequest struct {
	Payload *models.Error
}

func (o *PostConfigBadRequest) Error() string {
	return fmt.Sprintf("[POST /config][%d] postConfigBadRequest  %+v", 400, o.Payload)
}
func (o *PostConfigBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConfigUnauthorized creates a PostConfigUnauthorized with default headers values
func NewPostConfigUnauthorized() *PostConfigUnauthorized {
	return &PostConfigUnauthorized{}
}

/*
	PostConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostConfigUnauthorized struct {
	Payload *models.Error
}

func (o *PostConfigUnauthorized) Error() string {
	return fmt.Sprintf("[POST /config][%d] postConfigUnauthorized  %+v", 401, o.Payload)
}
func (o *PostConfigUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConfigNotFound creates a PostConfigNotFound with default headers values
func NewPostConfigNotFound() *PostConfigNotFound {
	return &PostConfigNotFound{}
}

/*
	PostConfigNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type PostConfigNotFound struct {
	Payload *models.Error
}

func (o *PostConfigNotFound) Error() string {
	return fmt.Sprintf("[POST /config][%d] postConfigNotFound  %+v", 404, o.Payload)
}
func (o *PostConfigNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConfigInternalServerError creates a PostConfigInternalServerError with default headers values
func NewPostConfigInternalServerError() *PostConfigInternalServerError {
	return &PostConfigInternalServerError{}
}

/*
	PostConfigInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostConfigInternalServerError struct {
	Payload *models.Error
}

func (o *PostConfigInternalServerError) Error() string {
	return fmt.Sprintf("[POST /config][%d] postConfigInternalServerError  %+v", 500, o.Payload)
}
func (o *PostConfigInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostConfigServiceUnavailable creates a PostConfigServiceUnavailable with default headers values
func NewPostConfigServiceUnavailable() *PostConfigServiceUnavailable {
	return &PostConfigServiceUnavailable{}
}

/*
	PostConfigServiceUnavailable describes a response with status code 503, with default header values.

Server busy
*/
type PostConfigServiceUnavailable struct {
	Payload *models.Error
}

func (o *PostConfigServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /config][%d] postConfigServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PostConfigServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostConfigServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
