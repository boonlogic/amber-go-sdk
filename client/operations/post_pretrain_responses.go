// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/boonlogic/amber-go-sdk/models"
)

// PostPretrainReader is a Reader for the PostPretrain structure.
type PostPretrainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPretrainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostPretrainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewPostPretrainAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPretrainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostPretrainUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostPretrainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPretrainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostPretrainServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostPretrainOK creates a PostPretrainOK with default headers values
func NewPostPretrainOK() *PostPretrainOK {
	return &PostPretrainOK{}
}

/*
	PostPretrainOK describes a response with status code 200, with default header values.

Operation was successful
*/
type PostPretrainOK struct {
	Payload *models.PostPretrainResponse
}

func (o *PostPretrainOK) Error() string {
	return fmt.Sprintf("[POST /pretrain][%d] postPretrainOK  %+v", 200, o.Payload)
}
func (o *PostPretrainOK) GetPayload() *models.PostPretrainResponse {
	return o.Payload
}

func (o *PostPretrainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostPretrainResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPretrainAccepted creates a PostPretrainAccepted with default headers values
func NewPostPretrainAccepted() *PostPretrainAccepted {
	return &PostPretrainAccepted{}
}

/*
	PostPretrainAccepted describes a response with status code 202, with default header values.

Operation was accepted
*/
type PostPretrainAccepted struct {
	AmberTransaction string
	PretrainAsync    string

	Payload *models.PostPretrainResponse
}

func (o *PostPretrainAccepted) Error() string {
	return fmt.Sprintf("[POST /pretrain][%d] postPretrainAccepted  %+v", 202, o.Payload)
}
func (o *PostPretrainAccepted) GetPayload() *models.PostPretrainResponse {
	return o.Payload
}

func (o *PostPretrainAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header amberTransaction
	hdrAmberTransaction := response.GetHeader("amberTransaction")

	if hdrAmberTransaction != "" {
		o.AmberTransaction = hdrAmberTransaction
	}

	// hydrates response header pretrain-async
	hdrPretrainAsync := response.GetHeader("pretrain-async")

	if hdrPretrainAsync != "" {
		o.PretrainAsync = hdrPretrainAsync
	}

	o.Payload = new(models.PostPretrainResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPretrainBadRequest creates a PostPretrainBadRequest with default headers values
func NewPostPretrainBadRequest() *PostPretrainBadRequest {
	return &PostPretrainBadRequest{}
}

/*
	PostPretrainBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostPretrainBadRequest struct {
	Payload *models.Error
}

func (o *PostPretrainBadRequest) Error() string {
	return fmt.Sprintf("[POST /pretrain][%d] postPretrainBadRequest  %+v", 400, o.Payload)
}
func (o *PostPretrainBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPretrainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPretrainUnauthorized creates a PostPretrainUnauthorized with default headers values
func NewPostPretrainUnauthorized() *PostPretrainUnauthorized {
	return &PostPretrainUnauthorized{}
}

/*
	PostPretrainUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostPretrainUnauthorized struct {
	Payload *models.Error
}

func (o *PostPretrainUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pretrain][%d] postPretrainUnauthorized  %+v", 401, o.Payload)
}
func (o *PostPretrainUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPretrainUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPretrainNotFound creates a PostPretrainNotFound with default headers values
func NewPostPretrainNotFound() *PostPretrainNotFound {
	return &PostPretrainNotFound{}
}

/*
	PostPretrainNotFound describes a response with status code 404, with default header values.

The specified resource was not found
*/
type PostPretrainNotFound struct {
	Payload *models.Error
}

func (o *PostPretrainNotFound) Error() string {
	return fmt.Sprintf("[POST /pretrain][%d] postPretrainNotFound  %+v", 404, o.Payload)
}
func (o *PostPretrainNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPretrainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPretrainInternalServerError creates a PostPretrainInternalServerError with default headers values
func NewPostPretrainInternalServerError() *PostPretrainInternalServerError {
	return &PostPretrainInternalServerError{}
}

/*
	PostPretrainInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostPretrainInternalServerError struct {
	Payload *models.Error
}

func (o *PostPretrainInternalServerError) Error() string {
	return fmt.Sprintf("[POST /pretrain][%d] postPretrainInternalServerError  %+v", 500, o.Payload)
}
func (o *PostPretrainInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPretrainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPretrainServiceUnavailable creates a PostPretrainServiceUnavailable with default headers values
func NewPostPretrainServiceUnavailable() *PostPretrainServiceUnavailable {
	return &PostPretrainServiceUnavailable{}
}

/*
	PostPretrainServiceUnavailable describes a response with status code 503, with default header values.

Server is busy
*/
type PostPretrainServiceUnavailable struct {
	Payload *models.Error
}

func (o *PostPretrainServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /pretrain][%d] postPretrainServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PostPretrainServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostPretrainServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
